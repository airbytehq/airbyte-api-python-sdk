"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class CastorEdc(str, Enum):
    CASTOR_EDC = 'castor-edc'


class URLRegion(str, Enum):
    r"""The url region given at time of registration"""
    UK = 'uk'
    NL = 'nl'
    US = 'us'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceCastorEdc:
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id') }})
    r"""Visit `https://YOUR_REGION.castoredc.com/account/settings`"""
    client_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_secret') }})
    r"""Visit `https://YOUR_REGION.castoredc.com/account/settings`"""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    SOURCE_TYPE: Final[CastorEdc] = dataclasses.field(default=CastorEdc.CASTOR_EDC, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    url_region: Optional[URLRegion] = dataclasses.field(default=URLRegion.UK, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url_region'), 'exclude': lambda f: f is None }})
    r"""The url region given at time of registration"""
    

