"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import date, datetime
from enum import Enum
from typing import Any, Final, List, Optional


class NewsdataIo(str, Enum):
    NEWSDATA_IO = 'newsdata-io'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceNewsdataIo:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    categories: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('categories'), 'exclude': lambda f: f is None }})
    r"""Search the news articles for a specific category. You can add up to 5 categories in a single query."""
    countries: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('countries'), 'exclude': lambda f: f is None }})
    r"""Search the news articles from a specific country. You can add up to 5 countries in a single query. Example: au, jp, br"""
    domains: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domains'), 'exclude': lambda f: f is None }})
    r"""Search the news articles for specific domains or news sources. You can add up to 5 domains in a single query."""
    end_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('end_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'exclude': lambda f: f is None }})
    r"""Choose an end date. Now UTC is default value"""
    languages: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('languages'), 'exclude': lambda f: f is None }})
    r"""Search the news articles for a specific language. You can add up to 5 languages in a single query."""
    search_query: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_query'), 'exclude': lambda f: f is None }})
    r"""Search news articles for specific keywords or phrases present in the news title, content, URL, meta keywords and meta description."""
    SOURCE_TYPE: Final[NewsdataIo] = dataclasses.field(default=NewsdataIo.NEWSDATA_IO, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

