"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional, Union


class DevNull(str, Enum):
    DEV_NULL = 'dev-null'


class TestDestinationType(str, Enum):
    SILENT = 'SILENT'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Silent:
    TEST_DESTINATION_TYPE: Final[Optional[TestDestinationType]] = dataclasses.field(default=TestDestinationType.SILENT, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('test_destination_type'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DestinationDevNull:
    test_destination: TestDestination = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('test_destination') }})
    r"""The type of destination to be used"""
    DESTINATION_TYPE: Final[DevNull] = dataclasses.field(default=DevNull.DEV_NULL, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationType') }})
    


TestDestination = Union[Silent]
