"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Any, Final, List, Optional


class MarketNewsCategory(str, Enum):
    r"""This parameter can be 1 of the following values general, forex, crypto, merger."""
    GENERAL = 'general'
    FOREX = 'forex'
    CRYPTO = 'crypto'
    MERGER = 'merger'


class Finnhub(str, Enum):
    FINNHUB = 'finnhub'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceFinnhub:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""The API key to use for authentication"""
    start_date_2: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date_2'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    symbols: List[Any] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbols') }})
    exchange: Optional[str] = dataclasses.field(default='US', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exchange'), 'exclude': lambda f: f is None }})
    r"""More info: https://finnhub.io/docs/api/stock-symbols"""
    market_news_category: Optional[MarketNewsCategory] = dataclasses.field(default=MarketNewsCategory.GENERAL, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('market_news_category'), 'exclude': lambda f: f is None }})
    r"""This parameter can be 1 of the following values general, forex, crypto, merger."""
    SOURCE_TYPE: Final[Finnhub] = dataclasses.field(default=Finnhub.FINNHUB, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

