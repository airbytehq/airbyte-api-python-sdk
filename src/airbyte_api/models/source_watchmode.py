"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Watchmode(str, Enum):
    WATCHMODE = 'watchmode'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceWatchmode:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""Your API key for authenticating with the Watchmode API. You can request a free API key at https://api.watchmode.com/requestApiKey/."""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    search_val: Optional[str] = dataclasses.field(default='Terminator', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_val'), 'exclude': lambda f: f is None }})
    r"""The name value for search stream"""
    SOURCE_TYPE: Final[Watchmode] = dataclasses.field(default=Watchmode.WATCHMODE, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

