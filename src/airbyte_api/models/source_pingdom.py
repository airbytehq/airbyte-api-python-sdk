"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Resolution(str, Enum):
    HOUR = 'hour'
    DAY = 'day'
    WEEK = 'week'


class Pingdom(str, Enum):
    PINGDOM = 'pingdom'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourcePingdom:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    probes: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('probes'), 'exclude': lambda f: f is None }})
    resolution: Optional[Resolution] = dataclasses.field(default=Resolution.HOUR, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('resolution'), 'exclude': lambda f: f is None }})
    SOURCE_TYPE: Final[Pingdom] = dataclasses.field(default=Pingdom.PINGDOM, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

