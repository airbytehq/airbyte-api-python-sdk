"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from .rowfilteringoperationtype import RowFilteringOperationType
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from typing import List, Union


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Not:
    conditions: List[RowFilteringOperation] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('conditions') }})
    r"""Conditions to evaluate with the NOT operator."""
    type: RowFilteringOperationType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class Equal:
    comparison_value: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('comparisonValue') }})
    r"""The value to compare the field against."""
    field_name: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('fieldName') }})
    r"""The name of the field to apply the operation on."""
    type: RowFilteringOperationType = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('type') }})
    


RowFilteringOperation = Union[Equal, Not]
