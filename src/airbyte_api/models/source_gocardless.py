"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional


class GoCardlessAPIEnvironment(str, Enum):
    r"""Environment you are trying to connect to."""
    SANDBOX = 'sandbox'
    LIVE = 'live'


class Gocardless(str, Enum):
    GOCARDLESS = 'gocardless'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceGocardless:
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token') }})
    r"""Gocardless API TOKEN"""
    gocardless_version: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gocardless_version') }})
    r"""GoCardless version. This is a date. You can find the latest here:
    https://developer.gocardless.com/api-reference/#api-usage-making-requests
    """
    start_date: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date') }})
    r"""UTC date and time in the format 2017-01-25T00:00:00Z. Any data
    before this date will not be replicated.
    """
    gocardless_environment: Optional[GoCardlessAPIEnvironment] = dataclasses.field(default=GoCardlessAPIEnvironment.SANDBOX, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('gocardless_environment'), 'exclude': lambda f: f is None }})
    r"""Environment you are trying to connect to."""
    SOURCE_TYPE: Final[Gocardless] = dataclasses.field(default=Gocardless.GOCARDLESS, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

