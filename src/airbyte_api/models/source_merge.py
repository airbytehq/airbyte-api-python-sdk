"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final


class Merge(str, Enum):
    MERGE = 'merge'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceMerge:
    account_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('account_token') }})
    r"""Link your other integrations with account credentials on accounts section to get account token (ref - https://app.merge.dev/linked-accounts/accounts)"""
    api_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_token') }})
    r"""API token can be seen at  https://app.merge.dev/keys"""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""Date time filter for incremental filter, Specify which date to extract from."""
    SOURCE_TYPE: Final[Merge] = dataclasses.field(default=Merge.MERGE, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

