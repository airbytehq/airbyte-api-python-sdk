"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional


class Rentcast(str, Enum):
    RENTCAST = 'rentcast'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceRentcast:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    address: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('address'), 'exclude': lambda f: f is None }})
    r"""The full address of the property, in the format of Street, City, State, Zip. Used to retrieve data for a specific property, or together with the radius parameter to search for listings in a specific area"""
    bath_rooms: Optional[int] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bath_rooms'), 'exclude': lambda f: f is None }})
    r"""The number of bathrooms, used to search for listings matching this criteria. Supports fractions to indicate partial bathrooms"""
    bedrooms: Optional[float] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('bedrooms'), 'exclude': lambda f: f is None }})
    r"""The number of bedrooms, used to search for listings matching this criteria. Use 0 to indicate a studio layout"""
    city: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('city'), 'exclude': lambda f: f is None }})
    r"""The name of the city, used to search for listings in a specific city. This parameter is case-sensitive"""
    data_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('data_type_'), 'exclude': lambda f: f is None }})
    r"""The type of aggregate market data to return. Defaults to \\"All\\" if not provided : All , Sale , Rental"""
    days_old: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('days_old'), 'exclude': lambda f: f is None }})
    r"""The maximum number of days since a property was listed on the market, with a minimum of 1 or The maximum number of days since a property was last sold, with a minimum of 1. Used to search for properties that were sold within the specified date range"""
    history_range: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('history_range'), 'exclude': lambda f: f is None }})
    r"""The time range for historical record entries, in months. Defaults to 12 if not provided"""
    latitude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('latitude'), 'exclude': lambda f: f is None }})
    r"""The latitude of the search area. Use the latitude/longitude and radius parameters to search for listings in a specific area"""
    longitude: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('longitude'), 'exclude': lambda f: f is None }})
    r"""The longitude of the search area. Use the latitude/longitude and radius parameters to search for listings in a specific area"""
    property_type: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('property_type'), 'exclude': lambda f: f is None }})
    r"""The type of the property, used to search for listings matching this criteria : Single Family , Condo , Townhouse , Manufactured ,  Multi-Family , Apartment , Land ,"""
    radius: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('radius'), 'exclude': lambda f: f is None }})
    r"""The radius of the search area in miles, with a maximum of 100. Use in combination with the latitude/longitude or address parameters to search for listings in a specific area"""
    SOURCE_TYPE: Final[Rentcast] = dataclasses.field(default=Rentcast.RENTCAST, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    state: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('state'), 'exclude': lambda f: f is None }})
    r"""The 2-character state abbreviation, used to search for listings in a specific state. This parameter is case-sensitive"""
    status: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('status'), 'exclude': lambda f: f is None }})
    r"""The current listing status, used to search for listings matching this criteria : Active or Inactive"""
    zipcode: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('zipcode'), 'exclude': lambda f: f is None }})
    r"""The 5-digit zip code, used to search for listings in a specific zip code"""
    

