"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional


class Gmail(str, Enum):
    GMAIL = 'gmail'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceGmail:
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id') }})
    client_refresh_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_refresh_token') }})
    client_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_secret') }})
    include_spam_and_trash: Optional[bool] = dataclasses.field(default=False, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('include_spam_and_trash'), 'exclude': lambda f: f is None }})
    r"""Include drafts/messages from SPAM and TRASH in the results. Defaults to false."""
    SOURCE_TYPE: Final[Gmail] = dataclasses.field(default=Gmail.GMAIL, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

