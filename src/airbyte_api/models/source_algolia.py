"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Algolia(str, Enum):
    ALGOLIA = 'algolia'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceAlgolia:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    application_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('application_id') }})
    r"""The application ID for your application found in settings"""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    object_id: Optional[str] = dataclasses.field(default='ecommerce-sample-data-9999996', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('object_id'), 'exclude': lambda f: f is None }})
    r"""Object ID within index for search queries"""
    search_query: Optional[str] = dataclasses.field(default='hitsPerPage=2&getRankingInfo=1', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('search_query'), 'exclude': lambda f: f is None }})
    r"""Search query to be used with indexes_query stream with format defined in `https://www.algolia.com/doc/rest-api/search/#tag/Search/operation/searchSingleIndex`"""
    SOURCE_TYPE: Final[Algolia] = dataclasses.field(default=Algolia.ALGOLIA, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

