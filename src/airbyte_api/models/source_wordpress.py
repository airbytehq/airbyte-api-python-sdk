"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Wordpress(str, Enum):
    WORDPRESS = 'wordpress'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceWordpress:
    domain: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('domain') }})
    r"""The domain of the WordPress site. Example: my-wordpress-website.host.com"""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""Minimal Date to Retrieve Records when stream allow incremental."""
    password: Optional[str] = dataclasses.field(default='x', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""Placeholder for basic HTTP auth password - should be set to empty string"""
    SOURCE_TYPE: Final[Wordpress] = dataclasses.field(default=Wordpress.WORDPRESS, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    username: Optional[str] = dataclasses.field(default='x', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username'), 'exclude': lambda f: f is None }})
    r"""Placeholder for basic HTTP auth username - should be set to empty string"""
    

