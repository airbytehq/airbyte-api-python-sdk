"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import date, datetime
from enum import Enum
from typing import Final, Optional


class Mention(str, Enum):
    MENTION = 'mention'


class StatisticsInterval(str, Enum):
    r"""Periodicity of statistics returned. it may be daily(P1D), weekly(P1W) or monthly(P1M)."""
    P1_D = 'P1D'
    P1_W = 'P1W'
    P1_M = 'P1M'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceMention:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    stats_start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats_start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    SOURCE_TYPE: Final[Mention] = dataclasses.field(default=Mention.MENTION, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    stats_end_date: Optional[date] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats_end_date'), 'encoder': utils.dateisoformat(True), 'decoder': utils.datefromisoformat, 'exclude': lambda f: f is None }})
    stats_interval: Optional[StatisticsInterval] = dataclasses.field(default=StatisticsInterval.P1_D, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('stats_interval'), 'exclude': lambda f: f is None }})
    r"""Periodicity of statistics returned. it may be daily(P1D), weekly(P1W) or monthly(P1M)."""
    

