"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Any, Final, List, Optional


class EmploymentHero(str, Enum):
    EMPLOYMENT_HERO = 'employment-hero'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceEmploymentHero:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    employees_configids: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('employees_configids'), 'exclude': lambda f: f is None }})
    r"""Employees IDs in the given organisation found in `employees` stream for passing to sub-streams"""
    organization_configids: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('organization_configids'), 'exclude': lambda f: f is None }})
    r"""Organization ID which could be found as result of `organizations` stream to be used in other substreams"""
    SOURCE_TYPE: Final[EmploymentHero] = dataclasses.field(default=EmploymentHero.EMPLOYMENT_HERO, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

