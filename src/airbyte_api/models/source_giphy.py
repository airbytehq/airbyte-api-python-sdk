"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Giphy(str, Enum):
    GIPHY = 'giphy'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceGiphy:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""Your GIPHY API Key. You can create and find your API key in the GIPHY Developer Dashboard at https://developers.giphy.com/dashboard/."""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    query: Optional[str] = dataclasses.field(default='foo', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query'), 'exclude': lambda f: f is None }})
    r"""A query for search endpoint"""
    query_for_clips: Optional[str] = dataclasses.field(default='foo', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_clips'), 'exclude': lambda f: f is None }})
    r"""Query for clips search endpoint"""
    query_for_gif: Optional[str] = dataclasses.field(default='foo', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_gif'), 'exclude': lambda f: f is None }})
    r"""Query for gif search endpoint"""
    query_for_stickers: Optional[str] = dataclasses.field(default='foo', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_stickers'), 'exclude': lambda f: f is None }})
    r"""Query for stickers search endpoint"""
    SOURCE_TYPE: Final[Giphy] = dataclasses.field(default=Giphy.GIPHY, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

