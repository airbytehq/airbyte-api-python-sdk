"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Yousign(str, Enum):
    YOUSIGN = 'yousign'


class SourceYousignSubdomain(str, Enum):
    r"""The subdomain for the Yousign API environment, such as 'sandbox' or 'api'."""
    API_SANDBOX = 'api-sandbox'
    API = 'api'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceYousign:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""API key or access token"""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    limit: Optional[str] = dataclasses.field(default='10', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limit'), 'exclude': lambda f: f is None }})
    r"""Limit for each response objects"""
    SOURCE_TYPE: Final[Yousign] = dataclasses.field(default=Yousign.YOUSIGN, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    subdomain: Optional[SourceYousignSubdomain] = dataclasses.field(default=SourceYousignSubdomain.API, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('subdomain'), 'exclude': lambda f: f is None }})
    r"""The subdomain for the Yousign API environment, such as 'sandbox' or 'api'."""
    

