"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class FinancialModelling(str, Enum):
    FINANCIAL_MODELLING = 'financial-modelling'


class TimeFrame(str, Enum):
    r"""For example 1min, 5min, 15min, 30min, 1hour, 4hour"""
    ONEMIN = '1min'
    FIVEMIN = '5min'
    FIFTEENMIN = '15min'
    THIRTYMIN = '30min'
    ONEHOUR = '1hour'
    FOURHOUR = '4hour'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceFinancialModelling:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    exchange: Optional[str] = dataclasses.field(default='NASDAQ', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('exchange'), 'exclude': lambda f: f is None }})
    r"""The stock exchange : AMEX, AMS, AQS, ASX, ATH, BER, BME, BRU, BSE, BUD, BUE, BVC, CAI, CBOE, CNQ, CPH, DFM, DOH, DUS, DXE, EGX, EURONEXT, HAM, HEL, HKSE, ICE, IOB, IST, JKT, JNB, JPX, KLS, KOE, KSC, KUW, LSE, MCX, MEX, MIL, MUN, NASDAQ, NEO, NSE, NYSE, NZE, OEM, OQX, OSL, OTC, PNK, PRA, RIS, SAO, SAU, SES, SET, SGO, SHH, SHZ, SIX, STO, STU, TAI, TLV, TSX, TSXV, TWO, VIE, VSE, WSE, XETRA"""
    marketcaplowerthan: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketcaplowerthan'), 'exclude': lambda f: f is None }})
    r"""Used in screener to filter out stocks with a market cap lower than the give marketcap"""
    marketcapmorethan: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('marketcapmorethan'), 'exclude': lambda f: f is None }})
    r"""Used in screener to filter out stocks with a market cap more than the give marketcap"""
    SOURCE_TYPE: Final[FinancialModelling] = dataclasses.field(default=FinancialModelling.FINANCIAL_MODELLING, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    time_frame: Optional[TimeFrame] = dataclasses.field(default=TimeFrame.FOURHOUR, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('time_frame'), 'exclude': lambda f: f is None }})
    r"""For example 1min, 5min, 15min, 30min, 1hour, 4hour"""
    

