"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Mendeley(str, Enum):
    MENDELEY = 'mendeley'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceMendeley:
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id') }})
    r"""Could be found at `https://dev.mendeley.com/myapps.html`"""
    client_refresh_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_refresh_token') }})
    r"""Use cURL or Postman with the OAuth 2.0 Authorization tab. Set the Auth URL to https://api.mendeley.com/oauth/authorize, the Token URL to https://api.mendeley.com/oauth/token, and use all as the scope."""
    client_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_secret') }})
    r"""Could be found at `https://dev.mendeley.com/myapps.html`"""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    name_for_institution: Optional[str] = dataclasses.field(default='City University', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('name_for_institution'), 'exclude': lambda f: f is None }})
    r"""The name parameter for institutions search"""
    query_for_catalog: Optional[str] = dataclasses.field(default='Polar Bear', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_catalog'), 'exclude': lambda f: f is None }})
    r"""Query for catalog search"""
    SOURCE_TYPE: Final[Mendeley] = dataclasses.field(default=Mendeley.MENDELEY, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

