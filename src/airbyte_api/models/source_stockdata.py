"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Any, Final, List, Optional


class Stockdata(str, Enum):
    STOCKDATA = 'stockdata'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceStockdata:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    filter_entities: Optional[bool] = dataclasses.field(default=False, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('filter_entities'), 'exclude': lambda f: f is None }})
    industries: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('industries'), 'exclude': lambda f: f is None }})
    r"""Specify the industries of entities which have been identified within the article."""
    SOURCE_TYPE: Final[Stockdata] = dataclasses.field(default=Stockdata.STOCKDATA, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    symbols: Optional[List[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('symbols'), 'exclude': lambda f: f is None }})
    

