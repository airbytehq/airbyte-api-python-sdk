"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional


class Deepset(str, Enum):
    DEEPSET = 'deepset'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class DestinationDeepset:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""Your deepset cloud API key"""
    workspace: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('workspace') }})
    r"""Name of workspace to which to sync the data."""
    base_url: Optional[str] = dataclasses.field(default='https://api.cloud.deepset.ai', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('base_url'), 'exclude': lambda f: f is None }})
    r"""URL of deepset Cloud API (e.g. https://api.cloud.deepset.ai, https://api.us.deepset.ai, etc). Defaults to https://api.cloud.deepset.ai."""
    DESTINATION_TYPE: Final[Deepset] = dataclasses.field(default=Deepset.DEEPSET, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationType') }})
    retries: Optional[float] = dataclasses.field(default=5, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('retries'), 'exclude': lambda f: f is None }})
    r"""Number of times to retry an action before giving up."""
    

