"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Shutterstock(str, Enum):
    SHUTTERSTOCK = 'shutterstock'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceShutterstock:
    api_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_token') }})
    r"""Your OAuth 2.0 token for accessing the Shutterstock API. Obtain this token from your Shutterstock developer account."""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    query_for_audio_search: Optional[str] = dataclasses.field(default='mountain', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_audio_search'), 'exclude': lambda f: f is None }})
    r"""The query for image search"""
    query_for_catalog_search: Optional[str] = dataclasses.field(default='mountain', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_catalog_search'), 'exclude': lambda f: f is None }})
    r"""The query for catalog search"""
    query_for_image_search: Optional[str] = dataclasses.field(default='mountain', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_image_search'), 'exclude': lambda f: f is None }})
    r"""The query for image search"""
    query_for_video_search: Optional[str] = dataclasses.field(default='mountain', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('query_for_video_search'), 'exclude': lambda f: f is None }})
    r"""The Query for `videos_search` stream"""
    SOURCE_TYPE: Final[Shutterstock] = dataclasses.field(default=Shutterstock.SHUTTERSTOCK, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

