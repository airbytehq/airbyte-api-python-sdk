"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class SourceAlpacaBrokerAPIEnvironment(str, Enum):
    r"""The trading environment, either 'live', 'paper' or 'broker-api.sandbox'."""
    API = 'api'
    PAPER_API = 'paper-api'
    BROKER_API_SANDBOX = 'broker-api.sandbox'


class AlpacaBrokerAPI(str, Enum):
    ALPACA_BROKER_API = 'alpaca-broker-api'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceAlpacaBrokerAPI:
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    username: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username') }})
    r"""API Key ID for the alpaca market"""
    environment: Optional[SourceAlpacaBrokerAPIEnvironment] = dataclasses.field(default=SourceAlpacaBrokerAPIEnvironment.BROKER_API_SANDBOX, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""The trading environment, either 'live', 'paper' or 'broker-api.sandbox'."""
    limit: Optional[str] = dataclasses.field(default='20', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('limit'), 'exclude': lambda f: f is None }})
    r"""Limit for each response objects"""
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""Your Alpaca API Secret Key. You can find this in the Alpaca developer web console under your account settings."""
    SOURCE_TYPE: Final[AlpacaBrokerAPI] = dataclasses.field(default=AlpacaBrokerAPI.ALPACA_BROKER_API, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

