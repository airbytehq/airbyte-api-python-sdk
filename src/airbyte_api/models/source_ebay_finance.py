"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class APIHost(str, Enum):
    r"""https://apiz.sandbox.ebay.com for sandbox & https://apiz.ebay.com for production"""
    HTTPS_APIZ_SANDBOX_EBAY_COM = 'https://apiz.sandbox.ebay.com'
    HTTPS_APIZ_EBAY_COM = 'https://apiz.ebay.com'


class EbayFinance(str, Enum):
    EBAY_FINANCE = 'ebay-finance'


class RefreshTokenEndpoint(str, Enum):
    HTTPS_API_SANDBOX_EBAY_COM_IDENTITY_V1_OAUTH2_TOKEN = 'https://api.sandbox.ebay.com/identity/v1/oauth2/token'
    HTTPS_API_EBAY_COM_IDENTITY_V1_OAUTH2_TOKEN = 'https://api.ebay.com/identity/v1/oauth2/token'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceEbayFinance:
    redirect_uri: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('redirect_uri') }})
    refresh_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('refresh_token') }})
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    username: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username') }})
    r"""Ebay Developer Client ID"""
    api_host: Optional[APIHost] = dataclasses.field(default=APIHost.HTTPS_APIZ_EBAY_COM, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_host'), 'exclude': lambda f: f is None }})
    r"""https://apiz.sandbox.ebay.com for sandbox & https://apiz.ebay.com for production"""
    password: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password'), 'exclude': lambda f: f is None }})
    r"""Ebay Client Secret"""
    SOURCE_TYPE: Final[EbayFinance] = dataclasses.field(default=EbayFinance.EBAY_FINANCE, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    token_refresh_endpoint: Optional[RefreshTokenEndpoint] = dataclasses.field(default=RefreshTokenEndpoint.HTTPS_API_EBAY_COM_IDENTITY_V1_OAUTH2_TOKEN, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token_refresh_endpoint'), 'exclude': lambda f: f is None }})
    

