"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional


class Unleash(str, Enum):
    UNLEASH = 'unleash'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceUnleash:
    api_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_token') }})
    r"""Your API Token (Server-Side SDK [Client]). See <a href=\\"https://docs.getunleash.io/how-to/how-to-create-api-tokens/\\">here</a>. The token is case sensitive."""
    api_url: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_url') }})
    r"""Your API URL. No trailing slash. ex: https://unleash.host.com/api"""
    nameprefix: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('nameprefix'), 'exclude': lambda f: f is None }})
    r"""Use this if you want to filter the API call for only one given project (can be used in addition to the \\"Feature Name Prefix\\" field). See <a href=\\"https://docs.getunleash.io/reference/api/legacy/unleash/client/features#filter-feature-toggles\\">here</a>"""
    project_name: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('project_name'), 'exclude': lambda f: f is None }})
    r"""Use this if you want to filter the API call for only one given project (can be used in addition to the \\"Feature Name Prefix\\" field). See <a href=\\"https://docs.getunleash.io/reference/api/legacy/unleash/client/features#filter-feature-toggles\\">here</a>"""
    SOURCE_TYPE: Final[Unleash] = dataclasses.field(default=Unleash.UNLEASH, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

