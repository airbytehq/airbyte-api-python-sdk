"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class SourcePaddleEnvironment(str, Enum):
    r"""The environment for the Paddle API, either 'sandbox' or 'live'."""
    API = 'api'
    SANDBOX_API = 'sandbox-api'


class Paddle(str, Enum):
    PADDLE = 'paddle'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourcePaddle:
    api_key: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_key') }})
    r"""Your Paddle API key. You can generate it by navigating to Paddle > Developer tools > Authentication > Generate API key. Treat this key like a password and keep it secure."""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    environment: Optional[SourcePaddleEnvironment] = dataclasses.field(default=SourcePaddleEnvironment.API, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('environment'), 'exclude': lambda f: f is None }})
    r"""The environment for the Paddle API, either 'sandbox' or 'live'."""
    SOURCE_TYPE: Final[Paddle] = dataclasses.field(default=Paddle.PADDLE, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

