"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional


class SourceYahooFinancePriceInterval(str, Enum):
    r"""The interval of between prices queried."""
    ONEM = '1m'
    FIVEM = '5m'
    FIFTEENM = '15m'
    THIRTYM = '30m'
    NINETYM = '90m'
    ONEH = '1h'
    ONED = '1d'
    FIVED = '5d'
    ONEWK = '1wk'
    ONEMO = '1mo'
    THREEMO = '3mo'


class Range(str, Enum):
    r"""The range of prices to be queried."""
    ONED = '1d'
    FIVED = '5d'
    SEVEND = '7d'
    ONEMO = '1mo'
    THREEMO = '3mo'
    SIXMO = '6mo'
    ONEY = '1y'
    TWOY = '2y'
    FIVEY = '5y'
    YTD = 'ytd'
    MAX = 'max'


class YahooFinancePrice(str, Enum):
    YAHOO_FINANCE_PRICE = 'yahoo-finance-price'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceYahooFinancePrice:
    tickers: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tickers') }})
    r"""Comma-separated identifiers for the stocks to be queried. Whitespaces are allowed."""
    interval: Optional[SourceYahooFinancePriceInterval] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('interval'), 'exclude': lambda f: f is None }})
    r"""The interval of between prices queried."""
    range: Optional[Range] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('range'), 'exclude': lambda f: f is None }})
    r"""The range of prices to be queried."""
    SOURCE_TYPE: Final[YahooFinancePrice] = dataclasses.field(default=YahooFinancePrice.YAHOO_FINANCE_PRICE, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

