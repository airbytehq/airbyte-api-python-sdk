"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte_api import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional


class Segment(str, Enum):
    SEGMENT = 'segment'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceSegment:
    api_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('api_token') }})
    r"""API token to use. Generate it in Segment's Workspace settings."""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    region: Optional[str] = dataclasses.field(default='api', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""The region for the API, e.g., 'api' for US or 'eu1' for EU"""
    SOURCE_TYPE: Final[Segment] = dataclasses.field(default=Segment.SEGMENT, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    

