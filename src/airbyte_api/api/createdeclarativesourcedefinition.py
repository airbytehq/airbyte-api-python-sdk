"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..models import createdeclarativesourcedefinitionrequest as models_createdeclarativesourcedefinitionrequest
from ..models import declarativesourcedefinitionresponse as models_declarativesourcedefinitionresponse
from typing import Optional


@dataclasses.dataclass
class CreateDeclarativeSourceDefinitionRequest:
    create_declarative_source_definition_request: models_createdeclarativesourcedefinitionrequest.CreateDeclarativeSourceDefinitionRequest = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    workspace_id: str = dataclasses.field(metadata={'path_param': { 'field_name': 'workspaceId', 'style': 'simple', 'explode': False }})
    



@dataclasses.dataclass
class CreateDeclarativeSourceDefinitionResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    declarative_source_definition_response: Optional[models_declarativesourcedefinitionresponse.DeclarativeSourceDefinitionResponse] = dataclasses.field(default=None)
    r"""Success"""
    

