"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from ..models import usersresponse as models_usersresponse
from typing import List, Optional


@dataclasses.dataclass
class ListUsersWithinAnOrganizationRequest:
    organization_id: str = dataclasses.field(metadata={'query_param': { 'field_name': 'organizationId', 'style': 'form', 'explode': True }})
    emails: Optional[List[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'emails', 'style': 'form', 'explode': True }})
    r"""List of user emails to filter by"""
    ids: Optional[List[str]] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'ids', 'style': 'form', 'explode': True }})
    r"""List of user IDs to filter by"""
    



@dataclasses.dataclass
class ListUsersWithinAnOrganizationResponse:
    content_type: str = dataclasses.field()
    r"""HTTP response content type for this operation"""
    status_code: int = dataclasses.field()
    r"""HTTP response status code for this operation"""
    raw_response: requests_http.Response = dataclasses.field()
    r"""Raw HTTP response; suitable for custom response parsing"""
    users_response: Optional[models_usersresponse.UsersResponse] = dataclasses.field(default=None)
    r"""List Users."""
    

