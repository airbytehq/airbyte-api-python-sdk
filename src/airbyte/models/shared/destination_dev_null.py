"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Final, Optional, Union


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DestinationDevNullTestDestinationSilent:
    r"""The type of destination to be used"""
    TEST_DESTINATION_TYPE: Final[Optional[str]] = dataclasses.field(default='SILENT', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('test_destination_type'), 'exclude': lambda f: f is None }})
    




@dataclasses.dataclass
class DestinationDevNullTestDestination:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DestinationDevNull:
    r"""The values required to configure the destination."""
    test_destination: Union[DestinationDevNullTestDestinationSilent] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('test_destination') }})
    r"""The type of destination to be used"""
    DESTINATION_TYPE: Final[str] = dataclasses.field(default='dev-null', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationType') }})
    

