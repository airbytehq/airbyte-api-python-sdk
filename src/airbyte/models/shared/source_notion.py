"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import dateutil.parser
from airbyte import utils
from dataclasses_json import Undefined, dataclass_json
from datetime import datetime
from enum import Enum
from typing import Final, Optional, Union

class SourceNotionAuthenticateUsingAccessTokenAuthType(str, Enum):
    TOKEN = 'token'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceNotionAuthenticateUsingAccessToken:
    r"""Pick an authentication method."""
    token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('token') }})
    r"""Notion API access token, see the <a href=\\"https://developers.notion.com/docs/authorization\\">docs</a> for more information on how to obtain this token."""
    AUTH_TYPE: Final[SourceNotionAuthenticateUsingAccessTokenAuthType] = dataclasses.field(default=SourceNotionAuthenticateUsingAccessTokenAuthType.TOKEN, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auth_type') }})
    


class SourceNotionAuthenticateUsingOAuth20AuthType(str, Enum):
    O_AUTH2_0 = 'OAuth2.0'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceNotionAuthenticateUsingOAuth20:
    r"""Pick an authentication method."""
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token') }})
    r"""Access Token is a token you received by complete the OauthWebFlow of Notion."""
    client_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_id') }})
    r"""The ClientID of your Notion integration."""
    client_secret: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('client_secret') }})
    r"""The ClientSecret of your Notion integration."""
    AUTH_TYPE: Final[SourceNotionAuthenticateUsingOAuth20AuthType] = dataclasses.field(default=SourceNotionAuthenticateUsingOAuth20AuthType.O_AUTH2_0, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auth_type') }})
    



@dataclasses.dataclass
class SourceNotionAuthenticateUsing:
    pass

class SourceNotionNotion(str, Enum):
    NOTION = 'notion'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourceNotion:
    r"""The values required to configure the source."""
    start_date: datetime = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('start_date'), 'encoder': utils.datetimeisoformat(False), 'decoder': dateutil.parser.isoparse }})
    r"""UTC date and time in the format 2017-01-25T00:00:00.000Z. Any data before this date will not be replicated."""
    SOURCE_TYPE: Final[SourceNotionNotion] = dataclasses.field(default=SourceNotionNotion.NOTION, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    credentials: Optional[Union[SourceNotionAuthenticateUsingOAuth20, SourceNotionAuthenticateUsingAccessToken]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('credentials'), 'exclude': lambda f: f is None }})
    r"""Pick an authentication method."""
    

