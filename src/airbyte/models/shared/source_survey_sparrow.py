"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Any, Final, Optional, Union


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class SourceSurveySparrowBaseURLGlobalAccount:
    r"""Is your account location is EU based? If yes, the base url to retrieve data will be different."""
    URL_BASE: Final[Optional[str]] = dataclasses.field(default='https://api.surveysparrow.com/v3', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url_base'), 'exclude': lambda f: f is None }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class SourceSurveySparrowBaseURLEUBasedAccount:
    r"""Is your account location is EU based? If yes, the base url to retrieve data will be different."""
    URL_BASE: Final[Optional[str]] = dataclasses.field(default='https://eu-api.surveysparrow.com/v3', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('url_base'), 'exclude': lambda f: f is None }})
    




@dataclasses.dataclass
class SourceSurveySparrowBaseURL:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class SourceSurveySparrow:
    r"""The values required to configure the source."""
    access_token: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('access_token') }})
    r"""Your access token. See <a href=\\"https://developers.surveysparrow.com/rest-apis#authentication\\">here</a>. The key is case sensitive."""
    SOURCE_TYPE: Final[str] = dataclasses.field(default='survey-sparrow', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    region: Optional[Union[SourceSurveySparrowBaseURLEUBasedAccount, SourceSurveySparrowBaseURLGlobalAccount]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('region'), 'exclude': lambda f: f is None }})
    r"""Is your account location is EU based? If yes, the base url to retrieve data will be different."""
    survey_id: Optional[list[Any]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('survey_id'), 'exclude': lambda f: f is None }})
    r"""A List of your survey ids for survey-specific stream"""
    

