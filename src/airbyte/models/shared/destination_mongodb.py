"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte import utils
from dataclasses_json import Undefined, dataclass_json
from typing import Final, Optional, Union


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DestinationMongodbAuthorizationTypeLoginPassword:
    r"""Login/Password."""
    password: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('password') }})
    r"""Password associated with the username."""
    username: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('username') }})
    r"""Username to use to access the database."""
    AUTHORIZATION: Final[str] = dataclasses.field(default='login/password', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorization') }})
    



@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DestinationMongodbAuthorizationTypeNone:
    r"""None."""
    AUTHORIZATION: Final[str] = dataclasses.field(default='none', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('authorization') }})
    




@dataclasses.dataclass
class DestinationMongodbAuthorizationType:
    pass



@dataclasses.dataclass
class DestinationMongodbMongoDbInstanceType:
    pass



@dataclasses.dataclass
class DestinationMongodbSSHTunnelMethod:
    pass


@dataclass_json(undefined=Undefined.EXCLUDE)

@dataclasses.dataclass
class DestinationMongodb:
    r"""The values required to configure the destination."""
    auth_type: Union[DestinationMongodbAuthorizationTypeNone, DestinationMongodbAuthorizationTypeLoginPassword] = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('auth_type') }})
    r"""Authorization type."""
    database: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('database') }})
    r"""Name of the database."""
    DESTINATION_TYPE: Final[str] = dataclasses.field(default='mongodb', metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('destinationType') }})
    instance_type: Optional[Union[]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('instance_type') }})
    r"""MongoDb instance to connect to. For MongoDB Atlas and Replica Set TLS connection is used by default."""
    tunnel_method: Optional[Union[]] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('tunnel_method') }})
    r"""Whether to initiate an SSH tunnel before connecting to the database, and if so, which kind of authentication to use."""
    

