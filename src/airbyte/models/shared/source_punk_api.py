"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
from airbyte import utils
from dataclasses_json import Undefined, dataclass_json
from enum import Enum
from typing import Final, Optional

class SourcePunkAPIPunkAPI(str, Enum):
    PUNK_API = 'punk-api'


@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class SourcePunkAPI:
    r"""The values required to configure the source."""
    brewed_after: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brewed_after') }})
    r"""To extract specific data with Unique ID"""
    brewed_before: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('brewed_before') }})
    r"""To extract specific data with Unique ID"""
    SOURCE_TYPE: Final[SourcePunkAPIPunkAPI] = dataclasses.field(default=SourcePunkAPIPunkAPI.PUNK_API, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('sourceType') }})
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""To extract specific data with Unique ID"""
    

